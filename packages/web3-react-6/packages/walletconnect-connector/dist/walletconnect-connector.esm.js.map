{"version":3,"file":"walletconnect-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport const URI_AVAILABLE = 'URI_AVAILABLE'\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'The user rejected the request.'\r\n  }\r\n}\r\n\r\ninterface WalletConnectConnectorArguments {\r\n  rpc: { [chainId: number]: string }\r\n  bridge?: string\r\n  qrcode?: boolean\r\n  pollingInterval?: number\r\n}\r\n\r\nexport class WalletConnectConnector extends AbstractConnector {\r\n  private readonly rpc: { [chainId: number]: string | undefined }\r\n  private readonly bridge?: string\r\n  private readonly qrcode?: boolean\r\n  private readonly pollingInterval?: number\r\n\r\n  public walletConnectProvider: any\r\n\r\n  constructor({ rpc, bridge, qrcode, pollingInterval }: WalletConnectConnectorArguments) {\r\n    invariant(Object.keys(rpc).length === 1, '@walletconnect/web3-provider is broken with >1 chainId, please use 1')\r\n    super({ supportedChainIds: Object.keys(rpc).map(k => Number(k)) })\r\n\r\n    this.rpc = rpc\r\n    this.bridge = bridge\r\n    this.qrcode = qrcode\r\n    this.pollingInterval = pollingInterval\r\n\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleDisconnect = this.handleDisconnect.bind(this)\r\n  }\r\n\r\n  private handleChainChanged(chainId: number | string): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n    }\r\n    this.emitUpdate({ chainId })\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: string[]): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n    }\r\n    this.emitUpdate({ account: accounts[0] })\r\n  }\r\n\r\n  private handleDisconnect(): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'disconnect' event\")\r\n    }\r\n    this.emitDeactivate()\r\n    // we have to do this because of a @walletconnect/web3-provider bug\r\n    if (this.walletConnectProvider) {\r\n      this.walletConnectProvider.stop()\r\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\r\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\r\n      this.walletConnectProvider = undefined\r\n    }\r\n\r\n    this.emitDeactivate()\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.walletConnectProvider) {\r\n      const { default: WalletConnectProvider } = await import('@walletconnect/web3-provider')\r\n      this.walletConnectProvider = new WalletConnectProvider({\r\n        bridge: this.bridge,\r\n        rpc: this.rpc,\r\n        qrcode: this.qrcode,\r\n        pollingInterval: this.pollingInterval\r\n      })\r\n      // only doing this here because this.walletConnectProvider.wc doesn't have a removeListener function...\r\n      this.walletConnectProvider.wc.on('disconnect', this.handleDisconnect)\r\n    }\r\n\r\n    this.walletConnectProvider.on('chainChanged', this.handleChainChanged)\r\n    this.walletConnectProvider.on('accountsChanged', this.handleAccountsChanged)\r\n\r\n    // ensure that the uri is going to be available, and emit an event if there's a new uri\r\n    if (!this.walletConnectProvider.wc.connected) {\r\n      await this.walletConnectProvider.wc.createSession({ chainId: this.walletConnectProvider.chainId })\r\n      this.emit(URI_AVAILABLE, this.walletConnectProvider.wc.uri)\r\n    }\r\n\r\n    const account = await this.walletConnectProvider\r\n      .enable()\r\n      .catch((error: Error): void => {\r\n        // TODO ideally this would be a better check\r\n        if (error.message === 'User closed WalletConnect modal') {\r\n          throw new UserRejectedRequestError()\r\n        }\r\n\r\n        throw error\r\n      })\r\n      .then((accounts: string[]): string => accounts[0])\r\n\r\n    return { provider: this.walletConnectProvider, account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.walletConnectProvider\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    return this.walletConnectProvider.send('eth_chainId')\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return this.walletConnectProvider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\r\n  }\r\n\r\n  public deactivate() {\r\n    if (this.walletConnectProvider) {\r\n      this.walletConnectProvider.stop()\r\n      this.walletConnectProvider.removeListener('chainChanged', this.handleChainChanged)\r\n      this.walletConnectProvider.removeListener('accountsChanged', this.handleAccountsChanged)\r\n    }\r\n  }\r\n\r\n  public async close() {\r\n    this.walletConnectProvider.wc.killSession()\r\n  }\r\n}\r\n"],"names":["URI_AVAILABLE","UserRejectedRequestError","name","constructor","message","Error","WalletConnectConnector","rpc","bridge","qrcode","pollingInterval","Object","keys","length","invariant","supportedChainIds","map","k","Number","handleChainChanged","bind","handleAccountsChanged","handleDisconnect","chainId","console","log","emitUpdate","accounts","account","emitDeactivate","walletConnectProvider","stop","removeListener","undefined","activate","enable","error","then","provider","on","wc","connected","createSession","emit","uri","WalletConnectProvider","getProvider","getChainId","send","getAccount","deactivate","close","killSession","AbstractConnector"],"mappings":"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"}