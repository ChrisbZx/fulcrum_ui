{"version":3,"file":"frame-connector.esm.js","sources":["../src/index.ts"],"sourcesContent":["import { AbstractConnectorArguments, ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport ethProvider from 'eth-provider'\r\nimport invariant from 'tiny-invariant'\r\n\r\nexport class UserRejectedRequestError extends Error {\r\n  public constructor() {\r\n    super()\r\n    this.name = this.constructor.name\r\n    this.message = 'The user rejected the request.'\r\n  }\r\n}\r\n\r\nexport class FrameConnector extends AbstractConnector {\r\n  private provider: any\r\n\r\n  constructor(kwargs: Required<AbstractConnectorArguments>) {\r\n    invariant(kwargs.supportedChainIds.length === 1, 'This connector only supports 1 chainId at the moment.')\r\n    super(kwargs)\r\n\r\n    this.handleNetworkChanged = this.handleNetworkChanged.bind(this)\r\n    this.handleChainChanged = this.handleChainChanged.bind(this)\r\n    this.handleAccountsChanged = this.handleAccountsChanged.bind(this)\r\n    this.handleClose = this.handleClose.bind(this)\r\n  }\r\n\r\n  private handleNetworkChanged(networkId: string): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'networkChanged' event with payload\", networkId)\r\n    }\r\n    this.emitUpdate({ provider: this.provider, chainId: networkId })\r\n  }\r\n\r\n  private handleChainChanged(chainId: string): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'chainChanged' event with payload\", chainId)\r\n    }\r\n    this.emitUpdate({ chainId })\r\n  }\r\n\r\n  private handleAccountsChanged(accounts: string[]): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'accountsChanged' event with payload\", accounts)\r\n    }\r\n    this.emitUpdate({ account: accounts.length === 0 ? null : accounts[0] })\r\n  }\r\n\r\n  private handleClose(code: number, reason: string): void {\r\n    if (__DEV__) {\r\n      console.log(\"Handling 'close' event with payload\", code, reason)\r\n    }\r\n    this.emitDeactivate()\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.provider) {\r\n      this.provider = ethProvider('frame')\r\n    }\r\n\r\n    this.provider\r\n      .on('networkChanged', this.handleNetworkChanged)\r\n      .on('chainChanged', this.handleChainChanged)\r\n      .on('accountsChanged', this.handleAccountsChanged)\r\n      .on('close', this.handleClose)\r\n\r\n    const account = await this.provider\r\n      .enable()\r\n      .then((accounts: string[]): string => accounts[0])\r\n      .catch((error: Error): void => {\r\n        if (error && (error as any).code === 4001) {\r\n          throw new UserRejectedRequestError()\r\n        } else {\r\n          throw error\r\n        }\r\n      })\r\n\r\n    return { provider: this.provider, account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.provider.send('eth_chainId')\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\r\n  }\r\n\r\n  public deactivate() {\r\n    this.provider\r\n      .removeListener('networkChanged', this.handleNetworkChanged)\r\n      .removeListener('chainChanged', this.handleChainChanged)\r\n      .removeListener('accountsChanged', this.handleAccountsChanged)\r\n      .removeListener('close', this.handleClose)\r\n  }\r\n}\r\n"],"names":["UserRejectedRequestError","name","constructor","message","Error","FrameConnector","kwargs","supportedChainIds","length","invariant","handleNetworkChanged","bind","handleChainChanged","handleAccountsChanged","handleClose","networkId","console","log","emitUpdate","provider","chainId","accounts","account","code","reason","emitDeactivate","activate","ethProvider","on","enable","then","error","getProvider","getChainId","send","getAccount","deactivate","removeListener","AbstractConnector"],"mappings":"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"}