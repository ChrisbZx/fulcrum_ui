{"version":3,"file":"walletlink-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nconst CHAIN_ID = 1\r\n\r\ninterface WalletLinkConnectorArguments {\r\n  url: string\r\n  appName: string\r\n  appLogoUrl?: string\r\n  darkMode?: boolean\r\n}\r\n\r\nexport class WalletLinkConnector extends AbstractConnector {\r\n  private readonly url: string\r\n  private readonly appName: string\r\n  private readonly appLogoUrl?: string\r\n  private readonly darkMode: boolean\r\n\r\n  public walletLink: any\r\n  private provider: any\r\n\r\n  constructor({ url, appName, appLogoUrl, darkMode }: WalletLinkConnectorArguments) {\r\n    super({ supportedChainIds: [CHAIN_ID] })\r\n\r\n    this.url = url\r\n    this.appName = appName\r\n    this.appLogoUrl = appLogoUrl\r\n    this.darkMode = darkMode || false\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.walletLink) {\r\n      const { default: WalletLink } = await import('walletlink')\r\n      this.walletLink = new WalletLink({\r\n        appName: this.appName,\r\n        darkMode: this.darkMode,\r\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\r\n      })\r\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\r\n    }\r\n\r\n    const account = await this.provider.send('eth_requestAccounts').then((accounts: string[]): string => accounts[0])\r\n\r\n    return { provider: this.provider, chainId: CHAIN_ID, account: account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return CHAIN_ID\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\r\n  }\r\n\r\n  public deactivate() {}\r\n\r\n  public async close() {\r\n    this.provider.close()\r\n    this.emitDeactivate()\r\n  }\r\n}\r\n"],"names":["url","appName","appLogoUrl","darkMode","supportedChainIds","activate","_this3","provider","send","then","accounts","account","chainId","this","walletLink","WalletLink","makeWeb3Provider","getProvider","getChainId","getAccount","deactivate","close","emitDeactivate","AbstractConnector"],"mappings":"gVAqBgBA,IAAAA,IAAKC,IAAAA,QAASC,IAAAA,WAAYC,IAAAA,8BAChC,CAAEC,kBAAmB,CAnBd,YAqBRJ,IAAMA,IACNC,QAAUA,IACVC,WAAaA,IACbC,SAAWA,IAAY,sHAGjBE,gEAWWC,EAAKC,SAASC,KAAK,uBAAuBC,MAAK,SAACC,UAA+BA,EAAS,sBAAxGC,SAEC,CAAEJ,SAAUD,EAAKC,SAAUK,QAxCrB,EAwCwCD,QAASA,SAZzDE,sBAAAP,EAAKQ,kCAC8B,8QAAO,wCACxCA,WAAa,IAAIC,gBACpBd,QAASK,EAAKL,QACdE,SAAUG,EAAKH,UACXG,EAAKJ,WAAa,CAAEA,WAAYI,EAAKJ,YAAe,OAErDK,SAAWD,EAAKQ,WAAWE,iBAAiBV,EAAKN,IAnC3C,+FA2CFiB,kDACJJ,KAAKN,gDAGDW,6CA/CE,MAmDFC,iDACJN,KAAKN,SAASC,KAAK,gBAAgBC,MAAK,SAACC,UAA+BA,EAAS,6CAGnFU,WAAA,eAEMC,4BACXR,KAAKN,SAASc,QAAdR,KACKS,0EAlDgCC"}