{"version":3,"file":"walletlink-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n\r\nconst CHAIN_ID = 1\r\n\r\ninterface WalletLinkConnectorArguments {\r\n  url: string\r\n  appName: string\r\n  appLogoUrl?: string\r\n  darkMode?: boolean\r\n}\r\n\r\nexport class WalletLinkConnector extends AbstractConnector {\r\n  private readonly url: string\r\n  private readonly appName: string\r\n  private readonly appLogoUrl?: string\r\n  private readonly darkMode: boolean\r\n\r\n  public walletLink: any\r\n  private provider: any\r\n\r\n  constructor({ url, appName, appLogoUrl, darkMode }: WalletLinkConnectorArguments) {\r\n    super({ supportedChainIds: [CHAIN_ID] })\r\n\r\n    this.url = url\r\n    this.appName = appName\r\n    this.appLogoUrl = appLogoUrl\r\n    this.darkMode = darkMode || false\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.walletLink) {\r\n      const { default: WalletLink } = await import('walletlink')\r\n      this.walletLink = new WalletLink({\r\n        appName: this.appName,\r\n        darkMode: this.darkMode,\r\n        ...(this.appLogoUrl ? { appLogoUrl: this.appLogoUrl } : {})\r\n      })\r\n      this.provider = this.walletLink.makeWeb3Provider(this.url, CHAIN_ID)\r\n    }\r\n\r\n    const account = await this.provider.send('eth_requestAccounts').then((accounts: string[]): string => accounts[0])\r\n\r\n    return { provider: this.provider, chainId: CHAIN_ID, account: account }\r\n  }\r\n\r\n  public async getProvider(): Promise<any> {\r\n    return this.provider\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return CHAIN_ID\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n    return this.provider.send('eth_accounts').then((accounts: string[]): string => accounts[0])\r\n  }\r\n\r\n  public deactivate() {}\r\n\r\n  public async close() {\r\n    this.provider.close()\r\n    this.emitDeactivate()\r\n  }\r\n}\r\n"],"names":["CHAIN_ID","WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","activate","provider","send","then","accounts","account","chainId","walletLink","WalletLink","makeWeb3Provider","getProvider","getChainId","getAccount","deactivate","close","emitDeactivate","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,IAAMA,QAAQ,GAAG,CAAjB;IASaC,mBAAb;AAAA;;AASE;;;QAAcC,WAAAA;QAAKC,eAAAA;QAASC,kBAAAA;QAAYC,gBAAAA;AACtC,0CAAM;AAAEC,MAAAA,iBAAiB,EAAE,CAACN,QAAD;AAArB,KAAN;AAEA,UAAKE,GAAL,GAAWA,GAAX;AACA,UAAKC,OAAL,GAAeA,OAAf;AACA,UAAKC,UAAL,GAAkBA,UAAlB;AACA,UAAKC,QAAL,GAAgBA,QAAQ,IAAI,KAA5B;;AACD;;AAhBH;;AAAA,SAkBeE,QAlBf;AAAA;;+BA6B0B,OAAKC,QAAL,CAAcC,IAAd,CAAmB,qBAAnB,EAA0CC,IAA1C,CAA+C,UAACC,QAAD;AAAA,iBAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,SAA/C,kBAAhBC;AAEN,iBAAO;AAAEJ,YAAAA,QAAQ,EAAE,OAAKA,QAAjB;AAA2BK,YAAAA,OAAO,EAAEb,QAApC;AAA8CY,YAAAA,OAAO,EAAEA;AAAvD,WAAP;;;;mBAZK;;;YAAD,CAAC,OAAKE;iCAC8B,mEAAO,YAAP;gBAArBC;AACjB,mBAAKD,UAAL,GAAkB,IAAIC,UAAJ;AAChBZ,cAAAA,OAAO,EAAE,OAAKA,OADE;AAEhBE,cAAAA,QAAQ,EAAE,OAAKA;AAFC,eAGZ,OAAKD,UAAL,GAAkB;AAAEA,cAAAA,UAAU,EAAE,OAAKA;AAAnB,aAAlB,GAAoD,EAHxC,EAAlB;AAKA,mBAAKI,QAAL,GAAgB,OAAKM,UAAL,CAAgBE,gBAAhB,CAAiC,OAAKd,GAAtC,EAA2CF,QAA3C,CAAhB;;;;;;AAMH,KAhCH;AAAA;AAAA;AAAA;;AAAA,SAkCeiB,WAlCf;AAAA;mBAmCW;;AAAP,6BAAO,OAAKT,QAAZ;AACD,KApCH;AAAA;AAAA;AAAA;;AAAA,SAsCeU,UAtCf;AAuCI,2BAAOlB,QAAP;AACD,GAxCH;;AAAA,SA0CemB,UA1Cf;AAAA;mBA2CW;;AAAP,6BAAO,OAAKX,QAAL,CAAcC,IAAd,CAAmB,cAAnB,EAAmCC,IAAnC,CAAwC,UAACC,QAAD;AAAA,eAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,OAAxC,CAAP;AACD,KA5CH;AAAA;AAAA;AAAA;;AAAA,SA8CSS,UA9CT,GA8CS,wBA9CT;;AAAA,SAgDeC,KAhDf;AAAA;mBAiDI;;AAAA,aAAKb,QAAL,CAAca,KAAd;;AACA,aAAKC,cAAL;;;AACD,KAnDH;AAAA;AAAA;AAAA;;AAAA;AAAA,EAAyCC,mCAAzC;;;;"}