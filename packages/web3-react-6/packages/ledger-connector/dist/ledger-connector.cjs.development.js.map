{"version":3,"file":"ledger-connector.cjs.development.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\nimport Web3ProviderEngine from 'web3-provider-engine'\r\nimport { ledgerEthereumBrowserClientFactoryAsync } from '@0x/subproviders/lib/src' // https://github.com/0xProject/0x-monorepo/issues/1400\r\nimport { LedgerSubprovider } from '@0x/subproviders/lib/src/subproviders/ledger' // https://github.com/0xProject/0x-monorepo/issues/1400\r\nimport CacheSubprovider from 'web3-provider-engine/subproviders/cache.js'\r\nimport { RPCSubprovider } from '@0x/subproviders/lib/src/subproviders/rpc_subprovider' // https://github.com/0xProject/0x-monorepo/issues/1400\r\n\r\ninterface LedgerConnectorArguments {\r\n  chainId: number\r\n  url: string\r\n  pollingInterval?: number\r\n  requestTimeoutMs?: number\r\n  accountFetchingConfigs?: any\r\n  baseDerivationPath?: string\r\n}\r\n\r\nexport class LedgerConnector extends AbstractConnector {\r\n  private readonly chainId: number\r\n  private readonly url: string\r\n  private readonly pollingInterval?: number\r\n  private readonly requestTimeoutMs?: number\r\n  private readonly accountFetchingConfigs?: any\r\n  private readonly baseDerivationPath?: string\r\n\r\n  private provider: any\r\n\r\n  constructor({\r\n    chainId,\r\n    url,\r\n    pollingInterval,\r\n    requestTimeoutMs,\r\n    accountFetchingConfigs,\r\n    baseDerivationPath\r\n  }: LedgerConnectorArguments) {\r\n    super({ supportedChainIds: [chainId] })\r\n\r\n    this.chainId = chainId\r\n    this.url = url\r\n    this.pollingInterval = pollingInterval\r\n    this.requestTimeoutMs = requestTimeoutMs\r\n    this.accountFetchingConfigs = accountFetchingConfigs\r\n    this.baseDerivationPath = baseDerivationPath\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n    if (!this.provider) {\r\n      const engine = new Web3ProviderEngine({ pollingInterval: this.pollingInterval })\r\n      engine.addProvider(\r\n        new LedgerSubprovider({\r\n          networkId: this.chainId,\r\n          ledgerEthereumClientFactoryAsync: ledgerEthereumBrowserClientFactoryAsync,\r\n          accountFetchingConfigs: this.accountFetchingConfigs,\r\n          baseDerivationPath: this.baseDerivationPath\r\n        })\r\n      )\r\n      engine.addProvider(new CacheSubprovider())\r\n      engine.addProvider(new RPCSubprovider(this.url, this.requestTimeoutMs))\r\n      this.provider = engine\r\n    }\r\n\r\n    this.provider.start()\r\n\r\n    return { provider: this.provider, chainId: this.chainId }\r\n  }\r\n\r\n  public async getProvider(): Promise<Web3ProviderEngine> {\r\n    return this.provider\r\n  }\r\n\r\n  public async getChainId(): Promise<number> {\r\n    return this.chainId\r\n  }\r\n\r\n  public async getAccount(): Promise<null> {\r\n    return this.provider._providers[0].getAccountsAsync(1).then((accounts: string[]): string => accounts[0])\r\n  }\r\n\r\n  public deactivate() {\r\n    this.provider.stop()\r\n  }\r\n}\r\n"],"names":["LedgerConnector","chainId","url","pollingInterval","requestTimeoutMs","accountFetchingConfigs","baseDerivationPath","supportedChainIds","activate","provider","engine","Web3ProviderEngine","addProvider","LedgerSubprovider","networkId","ledgerEthereumClientFactoryAsync","ledgerEthereumBrowserClientFactoryAsync","CacheSubprovider","RPCSubprovider","start","getProvider","getChainId","getAccount","_providers","getAccountsAsync","then","accounts","deactivate","stop","AbstractConnector"],"mappings":";;;;;;;;;;;;;;;;;IAiBaA,eAAb;AAAA;;AAUE;;;QACEC,eAAAA;QACAC,WAAAA;QACAC,uBAAAA;QACAC,wBAAAA;QACAC,8BAAAA;QACAC,0BAAAA;AAEA,0CAAM;AAAEC,MAAAA,iBAAiB,EAAE,CAACN,OAAD;AAArB,KAAN;AAEA,UAAKA,OAAL,GAAeA,OAAf;AACA,UAAKC,GAAL,GAAWA,GAAX;AACA,UAAKC,eAAL,GAAuBA,eAAvB;AACA,UAAKC,gBAAL,GAAwBA,gBAAxB;AACA,UAAKC,sBAAL,GAA8BA,sBAA9B;AACA,UAAKC,kBAAL,GAA0BA,kBAA1B;;AACD;;AA1BH;;AAAA,SA4BeE,QA5Bf;AAAA;mBA6BS;;AAAL,UAAI,CAAC,OAAKC,QAAV,EAAoB;AAClB,YAAMC,MAAM,GAAG,IAAIC,kBAAJ,CAAuB;AAAER,UAAAA,eAAe,EAAE,OAAKA;AAAxB,SAAvB,CAAf;AACAO,QAAAA,MAAM,CAACE,WAAP,CACE,IAAIC,wBAAJ,CAAsB;AACpBC,UAAAA,SAAS,EAAE,OAAKb,OADI;AAEpBc,UAAAA,gCAAgC,EAAEC,2CAFd;AAGpBX,UAAAA,sBAAsB,EAAE,OAAKA,sBAHT;AAIpBC,UAAAA,kBAAkB,EAAE,OAAKA;AAJL,SAAtB,CADF;AAQAI,QAAAA,MAAM,CAACE,WAAP,CAAmB,IAAIK,gBAAJ,EAAnB;AACAP,QAAAA,MAAM,CAACE,WAAP,CAAmB,IAAIM,8BAAJ,CAAmB,OAAKhB,GAAxB,EAA6B,OAAKE,gBAAlC,CAAnB;AACA,eAAKK,QAAL,GAAgBC,MAAhB;AACD;;AAED,aAAKD,QAAL,CAAcU,KAAd;;AAEA,6BAAO;AAAEV,QAAAA,QAAQ,EAAE,OAAKA,QAAjB;AAA2BR,QAAAA,OAAO,EAAE,OAAKA;AAAzC,OAAP;AACD,KA/CH;AAAA;AAAA;AAAA;;AAAA,SAiDemB,WAjDf;AAAA;mBAkDW;;AAAP,6BAAO,OAAKX,QAAZ;AACD,KAnDH;AAAA;AAAA;AAAA;;AAAA,SAqDeY,UArDf;AAAA;mBAsDW;;AAAP,6BAAO,OAAKpB,OAAZ;AACD,KAvDH;AAAA;AAAA;AAAA;;AAAA,SAyDeqB,UAzDf;AAAA;mBA0DW;;AAAP,6BAAO,OAAKb,QAAL,CAAcc,UAAd,CAAyB,CAAzB,EAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,IAAhD,CAAqD,UAACC,QAAD;AAAA,eAAgCA,QAAQ,CAAC,CAAD,CAAxC;AAAA,OAArD,CAAP;AACD,KA3DH;AAAA;AAAA;AAAA;;AAAA,SA6DSC,UA7DT,GA6DS;AACL,SAAKlB,QAAL,CAAcmB,IAAd;AACD,GA/DH;;AAAA;AAAA,EAAqCC,mCAArC;;;;"}